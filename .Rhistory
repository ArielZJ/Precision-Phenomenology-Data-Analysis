x
})
master_data = do.call("rbind.data.frame", master_data)
master_data <- as.data.table(master_data)
#Demographics
sex <- master_data %>% filter(trialcode %in% c("sex"))
age <- master_data %>% filter(trialcode %in% c("age"))
sex$response <- as.factor(sex$response)
age$response <- as.numeric(age$response)
#Age range
range(age$response)
#Age mean and SD
mean(age$response)
sd(age$response)
#Number of female and male participants
summary(sex$response)
#Demographics
sex <- master_data %>% filter(trialcode %in% c("sex"))
age <- master_data %>% filter(trialcode %in% c("age"))
sex$response <- as.factor(sex$response)
age$response <- as.numeric(age$response)
#Age range
range(age$response)
#Age mean and SD
mean(age$response)
sd(age$response)
#Number of female and male participants
summary(sex$response)
#list subject files
files <- list.files(path = "C:/Users/zelez/My Drive/tLab/Collaboration/Oizumi/behaviour", pattern = ".xlsx", full.names = TRUE)
#load all subject files and merge into single datatable
master_data = lapply(files, function(i){
x = read_excel(i, sheet=1)
x
})
master_data = do.call("rbind.data.frame", master_data)
master_data <- as.data.table(master_data)
#Demographics
sex <- master_data %>% filter(trialcode %in% c("sex"))
age <- master_data %>% filter(trialcode %in% c("age"))
sex$response <- as.factor(sex$response)
age$response <- as.numeric(age$response)
#Age range
range(age$response)
#Age mean and SD
mean(age$response)
sd(age$response)
#Number of female and male participants
summary(sex$response)
#list subject files
files <- list.files(path = "C:/Users/zelez/My Drive/tLab/Collaboration/Oizumi/behaviour", pattern = ".xlsx", full.names = TRUE)
#load all subject files and merge into single datatable
master_data = lapply(files, function(i){
x = read_excel(i, sheet=1)
x
})
master_data = do.call("rbind.data.frame", master_data)
master_data <- as.data.table(master_data)
knitr::opts_chunk$set(echo = TRUE)
#load libraries
library(tidyr)
library(akima)
library(plyr)
library(ggplot2)
library(lemon)
library(gridExtra)
library(MASS)
library(Matrix)
library(reshape2)
library(ape) # stats
library(vegan) # stats
library(RColorBrewer)
library(cocor)
library(DescTools)
library(reshape2)
library(grid)
library(ggplotify)
library(ggpubr)
library(scales)
library(data.table)
library(dplyr)
library(readr)
library(readxl)
library(purrr)
library(vroom)
library(broom)
#list subject files
files <- list.files(path = "C:/Users/zelez/My Drive/tLab/Collaboration/Oizumi/behaviour", pattern = ".xlsx", full.names = TRUE)
#load all subject files and merge into single datatable
master_data = lapply(files, function(i){
x = read_excel(i, sheet=1)
x
})
master_data = do.call("rbind.data.frame", master_data)
master_data <- as.data.table(master_data)
knitr::opts_chunk$set(echo = TRUE)
#load libraries
library(tidyr)
library(akima)
library(plyr)
library(ggplot2)
library(lemon)
library(gridExtra)
library(MASS)
library(Matrix)
library(reshape2)
library(ape) # stats
library(vegan) # stats
library(RColorBrewer)
library(cocor)
library(DescTools)
library(reshape2)
library(grid)
library(ggplotify)
library(ggpubr)
library(scales)
library(data.table)
library(dplyr)
library(readr)
library(readxl)
library(purrr)
library(vroom)
library(broom)
#list subject files
files <- list.files(path = "C:/Users/zelez/My Drive/tLab/Collaboration/Oizumi/behaviour", pattern = ".xlsx", full.names = TRUE)
#load all subject files and merge into single datatable
master_data = lapply(files, function(i){
x = read_excel(i, sheet=1)
x
})
master_data = do.call("rbind.data.frame", master_data)
master_data <- as.data.table(master_data)
#Demographics
sex <- master_data %>% filter(trialcode %in% c("sex"))
age <- master_data %>% filter(trialcode %in% c("age"))
sex$response <- as.factor(sex$response)
age$response <- as.numeric(age$response)
#Age range
range(age$response)
#Age mean and SD
mean(age$response)
sd(age$response)
#Number of female and male participants
summary(sex$response)
#subset for only the trials
master_data_trials <- master_data %>% filter(trialcode %in% c("response_options"))
master_data_trials$ID <- NA
subjectlist <- unique(master_data_trials$subject)
k= 0
for (subject in subjectlist){
k = k + 1
master_data_trials$ID[master_data_trials$subject == subject] <- k
}
#create column for colours to match EEG triggers
master_data_trials$previous_colour_trigger <- revalue(master_data_trials$previous_colour,
c(  "#ff0000" = 'S  1',
"#ffaa00" = 'S  2',
"#aaff00" = 'S  3',
"#00ff00" = 'S  4',
"#00ffa9" = 'S  5',
"#00a9ff" = 'S  6',
"#0000ff" = 'S  7',
"#aa00ff" = 'S  8',
"#ff00aa" = 'S  9'))
master_data_trials$current_colour_trigger <- revalue(master_data_trials$current_colour,
c(  "#ff0000" = 'S  1',
"#ffaa00" = 'S  2',
"#aaff00" = 'S  3',
"#00ff00" = 'S  4',
"#00ffa9" = 'S  5',
"#00a9ff" = 'S  6',
"#0000ff" = 'S  7',
"#aa00ff" = 'S  8',
"#ff00aa" = 'S  9'))
master_data_trials$previous_colour <- revalue(master_data_trials$previous_colour,
c(  "#ff0000" = '#FF0000',
"#ffaa00" = '#FFAA00',
"#aaff00" = '#AAFF00',
"#00ff00" = '#00FF00',
"#00ffa9" = '#00FFA9',
"#00a9ff" = '#00A9FF',
"#0000ff" = '#0000FF',
"#aa00ff" = '#AA00FF',
"#ff00aa" = '#FF00AA'))
master_data_trials$current_colour <- revalue(master_data_trials$current_colour,
c(  "#ff0000" = '#FF0000',
"#ffaa00" = '#FFAA00',
"#aaff00" = '#AAFF00',
"#00ff00" = '#00FF00',
"#00ffa9" = '#00FFA9',
"#00a9ff" = '#00A9FF',
"#0000ff" = '#0000FF',
"#aa00ff" = '#AA00FF',
"#ff00aa" = '#FF00AA'))
master_data_trials$previous_colour_trigger <- as.factor(master_data_trials$previous_colour_trigger)
master_data_trials$previous_colour <- as.factor(master_data_trials$previous_colour)
master_data_trials$current_colour_trigger <- as.factor(master_data_trials$current_colour_trigger)
master_data_trials$current_colour <- as.factor(master_data_trials$current_colour)
#Create column to match asymmetrical colour combinations
master_data_trials <- mutate(master_data_trials, pairs = case_when(
previous_colour_trigger =="S  1" & current_colour_trigger=="S  1" ~ "1",
previous_colour_trigger =="S  1" & current_colour_trigger=="S  2" |
previous_colour_trigger =="S  2" & current_colour_trigger=="S  1" ~ "2",
previous_colour_trigger =="S  1" & current_colour_trigger=="S  3" |
previous_colour_trigger =="S  3" & current_colour_trigger=="S  1" ~ "3",
previous_colour_trigger =="S  1" & current_colour_trigger=="S  4" |
previous_colour_trigger =="S  4" & current_colour_trigger=="S  1" ~ "4",
previous_colour_trigger =="S  1" & current_colour_trigger=="S  5" |
previous_colour_trigger =="S  5" & current_colour_trigger=="S  1" ~ "5",
previous_colour_trigger =="S  1" & current_colour_trigger=="S  6" |
previous_colour_trigger =="S  6" & current_colour_trigger=="S  1" ~ "6",
previous_colour_trigger =="S  1" & current_colour_trigger=="S  7" |
previous_colour_trigger =="S  7" & current_colour_trigger=="S  1" ~ "7",
previous_colour_trigger =="S  1" & current_colour_trigger=="S  8" |
previous_colour_trigger =="S  8" & current_colour_trigger=="S  1" ~ "8",
previous_colour_trigger =="S  1" & current_colour_trigger=="S  9" |
previous_colour_trigger =="S  9" & current_colour_trigger=="S  1" ~ "9",
previous_colour_trigger =="S  2" & current_colour_trigger=="S  2" ~ "10",
previous_colour_trigger =="S  2" & current_colour_trigger=="S  3" |
previous_colour_trigger =="S  3" & current_colour_trigger=="S  2" ~ "11",
previous_colour_trigger =="S  2" & current_colour_trigger=="S  4" |
previous_colour_trigger =="S  4" & current_colour_trigger=="S  2" ~ "12",
previous_colour_trigger =="S  2" & current_colour_trigger=="S  5" |
previous_colour_trigger =="S  5" & current_colour_trigger=="S  2" ~ "13",
previous_colour_trigger =="S  2" & current_colour_trigger=="S  6" |
previous_colour_trigger =="S  6" & current_colour_trigger=="S  2" ~ "14",
previous_colour_trigger =="S  2" & current_colour_trigger=="S  7" |
previous_colour_trigger =="S  7" & current_colour_trigger=="S  2" ~ "15",
previous_colour_trigger =="S  2" & current_colour_trigger=="S  8" |
previous_colour_trigger =="S  8" & current_colour_trigger=="S  2" ~ "16",
previous_colour_trigger =="S  2" & current_colour_trigger=="S  9" |
previous_colour_trigger =="S  9" & current_colour_trigger=="S  2" ~ "17",
previous_colour_trigger =="S  3" & current_colour_trigger=="S  3" ~ "18",
previous_colour_trigger =="S  3" & current_colour_trigger=="S  4" |
previous_colour_trigger =="S  4" & current_colour_trigger=="S  3" ~ "19",
previous_colour_trigger =="S  3" & current_colour_trigger=="S  5" |
previous_colour_trigger =="S  5" & current_colour_trigger=="S  3" ~ "20",
previous_colour_trigger =="S  3" & current_colour_trigger=="S  6" |
previous_colour_trigger =="S  6" & current_colour_trigger=="S  3" ~ "21",
previous_colour_trigger =="S  3" & current_colour_trigger=="S  7" |
previous_colour_trigger =="S  7" & current_colour_trigger=="S  3" ~ "22",
previous_colour_trigger =="S  3" & current_colour_trigger=="S  8" |
previous_colour_trigger =="S  8" & current_colour_trigger=="S  3" ~ "23",
previous_colour_trigger =="S  3" & current_colour_trigger=="S  9" |
previous_colour_trigger =="S  9" & current_colour_trigger=="S  3" ~ "24",
previous_colour_trigger =="S  4" & current_colour_trigger=="S  4" ~ "25",
previous_colour_trigger =="S  4" & current_colour_trigger=="S  5" |
previous_colour_trigger =="S  5" & current_colour_trigger=="S  4" ~ "26",
previous_colour_trigger =="S  4" & current_colour_trigger=="S  6" |
previous_colour_trigger =="S  6" & current_colour_trigger=="S  4" ~ "27",
previous_colour_trigger =="S  4" & current_colour_trigger=="S  7" |
previous_colour_trigger =="S  7" & current_colour_trigger=="S  4" ~ "28",
previous_colour_trigger =="S  4" & current_colour_trigger=="S  8" |
previous_colour_trigger =="S  8" & current_colour_trigger=="S  4" ~ "29",
previous_colour_trigger =="S  4" & current_colour_trigger=="S  9" |
previous_colour_trigger =="S  9" & current_colour_trigger=="S  4" ~ "30",
previous_colour_trigger =="S  5" & current_colour_trigger=="S  5" ~ "31",
previous_colour_trigger =="S  5" & current_colour_trigger=="S  6" |
previous_colour_trigger =="S  6" & current_colour_trigger=="S  5" ~ "32",
previous_colour_trigger =="S  5" & current_colour_trigger=="S  7" |
previous_colour_trigger =="S  7" & current_colour_trigger=="S  5" ~ "33",
previous_colour_trigger =="S  5" & current_colour_trigger=="S  8" |
previous_colour_trigger =="S  8" & current_colour_trigger=="S  5" ~ "34",
previous_colour_trigger =="S  5" & current_colour_trigger=="S  9" |
previous_colour_trigger =="S  9" & current_colour_trigger=="S  5" ~ "35",
previous_colour_trigger =="S  6" & current_colour_trigger=="S  6" ~ "36",
previous_colour_trigger =="S  6" & current_colour_trigger=="S  7" |
previous_colour_trigger =="S  7" & current_colour_trigger=="S  6" ~ "37",
previous_colour_trigger =="S  6" & current_colour_trigger=="S  8" |
previous_colour_trigger =="S  8" & current_colour_trigger=="S  6" ~ "38",
previous_colour_trigger =="S  6" & current_colour_trigger=="S  9" |
previous_colour_trigger =="S  9" & current_colour_trigger=="S  6" ~ "39",
previous_colour_trigger =="S  7" & current_colour_trigger=="S  7" ~ "40",
previous_colour_trigger =="S  7" & current_colour_trigger=="S  8" |
previous_colour_trigger =="S  8" & current_colour_trigger=="S  7" ~ "41",
previous_colour_trigger =="S  7" & current_colour_trigger=="S  9" |
previous_colour_trigger =="S  9" & current_colour_trigger=="S  7" ~ "42",
previous_colour_trigger =="S  8" & current_colour_trigger=="S  8" ~ "43",
previous_colour_trigger =="S  8" & current_colour_trigger=="S  9" |
previous_colour_trigger =="S  9" & current_colour_trigger=="S  8" ~ "44",
previous_colour_trigger =="S  9" & current_colour_trigger=="S  9" ~ "45",
))
master_data_trials$pairs <- as.numeric(master_data_trials$pairs)
#For each subject, summarise the mean similarity for the symmetrical pairs of colours
master_data_trials <- master_data_trials %>%
group_by(subject, pairs) %>%
mutate(mean_similarity = mean(similarity))
#Keep only the mean similarity values, including duplicates for symmetrical colour pairs
master_data_trials_means <- master_data_trials %>%
distinct(subject, previous_colour, current_colour, mean_similarity) %>%
arrange(subject, pairs)
#Rename colour columns to match EEG data
master_data_trials_means <- rename(master_data_trials_means, Var1 = previous_colour, Var2 = current_colour)
master_data_trials_means <- as.data.table(master_data_trials_means)
#Convert dataframe for mean similarity values to list
master_data_trial_means_list <- split(master_data_trials_means, f=master_data_trials_means$subject)
#Colours for plotting
colours <- c('#FF0000','#FFAA00','#AAFF00','#00FF00','#00FFA9','#00A9FF','#0000FF','#AA00FF','#FF00AA')
#Plot RDMs for behavioural data
dissimplot_beh_fun <- function(x){ggplot(x, aes(x = Var1, y = Var2)) +
theme(axis.text.x = (element_text(colour = colours, angle = 90, size=4)), axis.text.y = element_text(colour = colours, size=4),
plot.title = element_text(hjust = 0.5, size = 12), text = element_text(size=12), plot.subtitle =element_text(size=12)) + geom_raster(aes(fill = mean_similarity)) +
labs(x = 'Colours', y = 'Colours') +
scale_fill_gradientn(colours = c("white","black")) +
guides(fill=guide_legend(title="Dissimilarity")) + scale_x_discrete(position = "bottom")}
dissimplots_beh <- lapply(master_data_trial_means_list, dissimplot_beh_fun)
master_data_trials <- master_data_trials %>% group_by(subject, pairs) %>% mutate(variance = var(similarity))
master_variance <- master_data_trials %>% group_by(subject) %>% mutate(mean_variance = mean(variance))
master_variance <- subset(master_variance, select = c("subject", "mean_variance"))
master_variance <- master_variance %>% distinct(subject, mean_variance)
master_variance$subject <- as.character(master_variance$subject)
master_variance$subject <- revalue(master_variance$subject, c(
'1' = '01',
'2' = '02',
'3' = '03',
'4' = '04',
'5' = '05',
'6' = '06',
'7' = '07',
'8' = '08'
))
#Bar plot for subject's variance
variance_bar <- ggplot(master_variance, aes(subject, mean_variance)) + geom_bar(stat = "identity", color = "blue", fill = " light blue") + theme(axis.title = element_text(size = 24, face = "bold"), axis.text = element_text(size = 22, color = "black"), axis.line = element_line(colour = "black"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) + labs(x = "Subject", y = "Variance")
# Run for each subject
# List the .txt files for ERP data
list_of_files <- list.files(path = "C:/Users/zelez/My Drive/tLab/Collaboration/Oizumi/neurophys/similarity_s01_ERPs", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
subject_08_data_EEG <- vroom(list_of_files, show_col_types = FALSE, id ="path")
#Add column to label each colour
subject_08_data_EEG$colour <- NA
colourlist <- unique(subject_08_data_EEG$path)
k= 0
for (path in colourlist){
k = k + 1
subject_08_data_EEG$colour[subject_08_data_EEG$path == path] <- k
}
##Add column for colour hex code (run for each subject)
subject_08_data_EEG$colour <- mapvalues(subject_08_data_EEG$colour, from = c(1:9), to = c("#FF0000","#FFAA00","#AAFF00","#00FF00", "#00FFA9","#00A9FF", "#0000FF", "#AA00FF", "#FF00AA"))
#Factor colour column
subject_08_data_EEG$colour <- as.factor(subject_08_data_EEG$colour)
#Remove extra column
subject_08_data_EEG <- subset(subject_08_data_EEG, select= -c(...67))
View(master_data_trials_means)
View(master_data_trials_means)
write.csv(master_data_trials_means,"all_subjects_behaviour_labelled.csv")
library(tidyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(MASS)
library(Matrix)
library(reshape2)
library(ape) # stats
library(vegan) # stats
library(RColorBrewer)
library(cocor)
library(DescTools)
library(reshape2)
library(grid)
library(ggplotify)
library(plyr)
library(dplyr)
library(ggpubr)
library(esquisse)
shhh <- suppressPackageStartupMessages # stops annoying warnings when loading libraries
library(tidyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(MASS)
library(Matrix)
library(reshape2)
library(ape) # stats
library(vegan) # stats
library(RColorBrewer)
library(cocor)
library(DescTools)
library(reshape2)
library(grid)
library(ggplotify)
library(plyr)
library(dplyr)
library(ggpubr)
library(esquisse)
data <- read.csv("/Users/vanessaaugustini/Desktop/Similarity Trail csv./VA_massive_similarity_2022-05-29_14h25.31.604.csv")
clear
shhh <- suppressPackageStartupMessages # stops annoying warnings when loading libraries
library(tidyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(MASS)
library(Matrix)
library(reshape2)
library(ape) # stats
library(vegan) # stats
library(RColorBrewer)
library(cocor)
library(DescTools)
library(reshape2)
library(grid)
library(ggplotify)
library(plyr)
library(dplyr)
library(ggpubr)
library(esquisse)
data <- read.csv("C:/Users/zelez/My Drive/tLab/Supervision/Honours/2022/Vanessa/VA_massive_similarity_2022-05-29_14h25.31.604.csv")
print(colnames(data))
print(data$similarity)
# Select variables we need for analysis
trial_vars<- c( "participant",
"similarity", "response_time", "catchnumber", "catchnumberprac",
"catchresponse", "catchtrialorder", "screen_size_x","screen_size_y","viewerdistancecm",
'viewer_distance',"trialnumber", "double_pass.thisIndex","double_pass.thisTrialN","double_pass.thisN")
colnames(data)
data <- subset(data, select = trial_vars
data <- subset(data, select = trial_vars)
data <- subset(data, select = trial_vars)
get.catchtrial.info <- function(df.catchtrialorder){
info <- (unique(df.catchtrialorder)[2])
info <- as.character(info) # convert to string
info <- str_sub(info, 2, -2) # remove the square brackets
info <- str_split(info, pattern = fixed(',')) # get a vector of the catch trials in string format
info <- info[[1]]
#print(info) # testing
info <- as.numeric(info) # convert to numeric
return(info)
}
2 + 2
x <- 2
x
for(i in 1:10){}
for(i in 1:10){print(i)}
print.vanessa <- function(input){}
print.vanessa <- function(input){
return(paste(input,'vanessa is great'))
}
print.vanessa('banana')
print.vanessa('cheese')
print.vanessa('potato')
print.vanessa
get.catchtrial.info()
get.catchtrial.info(data)
library(stringr)
library(stringr)
get.catchtrial.info(data)
get.catchtrial.info <- function(df.catchtrialorder){
info <- (unique(df.catchtrialorder)[2])
info <- as.character(info) # convert to string
info <- str_sub(info, 2, -2) # remove the square brackets
info <- str_split(info, pattern = fixed(',')) # get a vector of the catch trials in string format
info <- info[[1]]
#print(info) # testing
info <- as.numeric(info) # convert to numeric
return(info)
}
add.catchtrial.info <- function(df){
IDs <- unique(df$participant)
colnames <- colnames(df)
output.df <- df[FALSE,]
for(ID in IDs){
tempdf <- subset(df, participant == ID)
catch.trials <- get.catchtrial.info(tempdf$catchtrialorder)
tempdf$catch.trial <- ifelse(is.element(tempdf$trialnumber,catch.trials),TRUE,FALSE)
#print(colnames(tempdf)) #testing
output.df <- rbind(output.df,tempdf)
}
return(output.df)
data$catch.trials <- NA # need to add this here to make stuff work nicely later
test <- add.catchtrial.info(data)
}
# Check catch scores
catch_trial_checker <- function(datadf){
subjectlist <- sort(unique(test$participant))
print("Catch scores")
for (participant in subjectlist){
subjectdf <- test[which(test$participant == participant),]
catch_trials <- subset(subjectdf, catch.trial == TRUE)
catch_num = nrow(catch_trials)
catch_correct = nrow(subset(catch_trials, catchnumber == catchresponse))
print(paste("Subject",participant,":",catch_correct,"/",catch_num))
}
}
catch_trial_checker <- function(datadf){
subjectlist <- sort(unique(datadf$participant))
print("Catch scores")
for (participant in subjectlist){
subjectdf <- datadf[which(datadf$participant == participant),]
catch_trials <- subset(subjectdf, catch.trial == TRUE)
catch_num = nrow(catch_trials)
catch_correct = nrow(subset(catch_trials, catchnumber == catchresponse))
print(paste("Subject",participant,":",catch_correct,"/",catch_num))
}
}
catch_trial_checker(data)
data$catch.trials <- NA # need to add this here to make stuff work nicely later
catch_trial_checker(data)
test <- add.catchtrial.info(data)
colnames(data)
add.catchtrial.info(data)
data$catch.trial <- NA # need to add this here to make stuff work nicely later
add.catchtrial.info(data)
first.pass <- data$similarity[14:33]
first.pass
hist(first.pass)
plot(first.pass)
plot(first.pass,'line')
source("C:/Users/zelez/My Drive/tLab/Precision Phenomenology/Data Analysis/Precision-Phenomenology-Data-Analysis/color_visual_field_check_progress.r", echo=TRUE)
